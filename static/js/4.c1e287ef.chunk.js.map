{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/common/Alert/alert.js","components/common/Alert/alert2.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPostsForm/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","onClick","className","style","formSummaryControl","createField","Textarea","Input","type","Object","keys","contacts","map","key","s","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","Alert","this","createAlert","prevProps","prevState","snapshot","show","JSON","parse","stringify","onCancel","onConfirm","onConfirmOrDismiss","onDismiss","onEscape","onOutsideClick","onOpen","onBeforeOpen","Swal","fire","then","result","hasOwnProperty","dismissalType","onClose","React","Component","defaultProps","allowEnterKey","allowEscapeKey","allowOutsideClick","animation","backdrop","background","buttonsStyling","cancelButtonClass","cancelButtonColor","cancelButtonText","confirmButtonClass","confirmButtonColor","confirmButtonText","customClass","focusCancel","focusConfirm","footer","heightAuto","html","input","inputAttributes","inputAutoTrim","inputClass","inputOptions","inputPlaceholder","inputValidator","inputValue","padding","position","preConfirm","reverseButtons","showCancelButton","showCloseButton","showConfirmButton","showLoaderOnConfirm","stopKeydownPropagation","text","title","width","Alert2","state","interpretedAlert","showDeclarative","setState","declarativeAlert","ProfileData","isOwner","toEditMode","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","isSaveProfile","setIsSaveProfileCome","Preloader","src","descriptionBlock","photos","large","userPhoto","target","files","length","initialValues","formData","Post","item","message","likescount","maxLength10","maxLengthCreator","MyPostsReduxForm","Field","name","component","placeholder","validate","required","MyPosts","memo","postsElements","posts","reverse","p","id","postsBlock","dispatch","onButtonClick","newPostText","reset","MyPostsContainer","connect","profilePage","onButtonClickEventActionCreator","window","Profile","ProfileContainer","userId","match","params","authUserId","history","push","getUserProfile","getStatus","refreshMethod","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.c1e287ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3wrlI\",\"poiskRabotyPhoto\":\"ProfileInfo_poiskRabotyPhoto__28MWN\",\"userPhoto\":\"ProfileInfo_userPhoto__3S0fK\",\"contacts\":\"ProfileInfo_contacts__13Xn-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__27Vvm\",\"posts\":\"MyPosts_posts__3klq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2x9zK\"};","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n//import { Contact } from \"./ProfileInfo\";\r\nimport { createField, Input, Textarea } from \"../../common/formControls/formControls\"\r\nimport { reduxForm } from \"redux-form\";\r\nimport style from \"../../common/formControls/FormControls.module.css\";\r\n\r\n\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                \r\n                <div>{<button onClick={() => { }}>save</button>} \r\n                \r\n                </div>\r\n                {error && <div className={style.formSummaryControl}>\r\n                    {error} </div>}\r\n\r\n                {/*<textarea value={aboutMe} cols=\"30\" rows=\"10\"/>*/}\r\n                <div> <b>About me</b>:{createField(Textarea, [],\r\n                    \"aboutMe\", \"about me\")} </div>\r\n\r\n                {/*<>{props.profile.contacts}</>*/}\r\n\r\n\r\n                <div>\r\n                    <b>Fullname</b>:{createField(Input, [], \"fullName\", \"Full name\")}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job</b>: {createField(Input, [], \"lookingForaJob\", \"\", { type: \"checkbox\" })}\r\n                </div>\r\n\r\n                <div>\r\n                    <b>My professional skills</b>:\r\n                        {createField(Textarea, [],\r\n                        \"lookingForAJobDescription\", \"My professional skills\")}\r\n                </div>\r\n\r\n\r\n\r\n                <div>\r\n                    <b>contacts</b>: {Object\r\n                        .keys(profile.contacts).map((key) => {\r\n                            return <div key={key} className={s.contacts}>\r\n                                <b> {key}: {createField(Input, [], \"contacts.\" + key, key)}</b>\r\n                            </div>\r\n                        })}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\nexport const ProfileDataReduxForm = reduxForm({ form: 'editProfile' })(ProfileDataForm);\r\nexport default ProfileDataReduxForm;","import React, { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    //let stateWithSetState=useState(true);\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        setStatus(props.status) }, [props.status])\r\n\r\n    /* let editMode=stateWithSetState[0];\r\n    let setEditMode=stateWithSetState[1]; */\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deActivateEditMode = () => {\r\n    \r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n        \r\n\r\n\r\n    }\r\n\r\n    /* if(status!==props.status)\r\n            { setStatus({status:props.status})} */\r\n\r\n\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || \"no STATUS\"}</span>\r\n                </div>}\r\n\r\n            {editMode &&\r\n                <div>\r\n                    <input onBlur={deActivateEditMode} onChange={onStatusChange} autoFocus={true} value={status} />\r\n                    \r\n                </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nclass Alert extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tallowEnterKey : PropTypes.bool,\r\n\t\tallowEscapeKey : PropTypes.bool,\r\n\t\tallowOutsideClick : PropTypes.bool,\r\n\t\tanimation : PropTypes.bool,\r\n\t\tbackdrop : PropTypes.bool,\r\n\t\tbackground : PropTypes.string,\r\n\t\tbuttonsStyling : PropTypes.bool,\r\n\t\tcancelButtonClass : PropTypes.string,\r\n\t\tcancelButtonColor : PropTypes.string,\r\n\t\tcancelButtonText : PropTypes.string,\r\n\t\tconfirmButtonClass : PropTypes.string,\r\n\t\tconfirmButtonColor : PropTypes.string,\r\n\t\tconfirmButtonText : PropTypes.string,\r\n\t\tcustomClass : PropTypes.string,\r\n\t\tfocusCancel : PropTypes.bool,\r\n\t\tfocusConfirm : PropTypes.bool,\r\n\t\tfooter : PropTypes.string,\r\n\t\theightAuto : PropTypes.bool,\r\n\t\thtml : PropTypes.string,\r\n\t\tinput : PropTypes.oneOf(\r\n\t\t\t[\r\n\t\t\t\t'checkbox',\r\n\t\t\t\t'email',\r\n\t\t\t\t'file',\r\n\t\t\t\t'number',\r\n\t\t\t\t'password',\r\n\t\t\t\t'radio',\r\n\t\t\t\t'range',\r\n\t\t\t\t'select',\r\n\t\t\t\t'tel',\r\n\t\t\t\t'text',\r\n\t\t\t\t'textarea',\r\n\t\t\t\t'url',\r\n\t\t\t]\r\n\t\t),\r\n\t\tinputAttributes : PropTypes.object,\r\n\t\tinputAutoTrim : PropTypes.bool,\r\n\t\tinputClass : PropTypes.string,\r\n\t\tinputOptions : PropTypes.object,\r\n\t\tinputPlaceholder : PropTypes.string,\r\n\t\tinputValidator : PropTypes.func,\r\n\t\tinputValue : PropTypes.string,\r\n\t\tonBeforeOpen : PropTypes.func,\r\n\t\tonCancel : PropTypes.func,\r\n\t\tonClose : PropTypes.func,\r\n\t\tonConfirm : PropTypes.func,\r\n\t\tonConfirmOrDismiss : PropTypes.func,\r\n\t\tonDismiss : PropTypes.func,\r\n\t\tonEscape : PropTypes.func,\r\n\t\tonOpen : PropTypes.func,\r\n\t\tonOutsideClick : PropTypes.func,\r\n\t\tpadding : PropTypes.string,\r\n\t\tpreConfirm : PropTypes.func,\r\n\t\tposition : PropTypes.oneOf(\r\n\t\t\t[\r\n\t\t\t\t'bottom',\r\n\t\t\t\t'bottom-end',\r\n\t\t\t\t'bottom-start',\r\n\t\t\t\t'center',\r\n\t\t\t\t'center-end',\r\n\t\t\t\t'center-start',\r\n\t\t\t\t'top',\r\n\t\t\t\t'top-end',\r\n\t\t\t\t'top-start',\r\n\t\t\t]\r\n\t\t),\r\n\t\treverseButtons : PropTypes.bool,\r\n\t\tshow : PropTypes.bool,\r\n\t\tshowCancelButton : PropTypes.bool,\r\n\t\tshowCloseButton : PropTypes.bool,\r\n\t\tshowConfirmButton : PropTypes.bool,\r\n\t\tstopKeydownPropagation : PropTypes.bool,\r\n\t\tshowLoaderOnConfirm : PropTypes.bool,\r\n\t\ttext : PropTypes.string,\r\n\t\ttitle : PropTypes.string,\r\n\t\ttype : PropTypes.oneOf(\r\n\t\t\t[\r\n\t\t\t\t'info',\r\n\t\t\t\t'error',\r\n\t\t\t\t'question',\r\n\t\t\t\t'success',\r\n\t\t\t\t'warning',\r\n\t\t\t]\r\n\t\t),\r\n\t\twidth : PropTypes.string,\r\n\t};\r\n\t\r\n\tstatic defaultProps = {\r\n\t\tallowEnterKey : true,\r\n\t\tallowEscapeKey : true,\r\n\t\tallowOutsideClick : true,\r\n\t\tanimation : true,\r\n\t\tbackdrop : true,\r\n\t\tbackground : null,\r\n\t\tbuttonsStyling : true,\r\n\t\tcancelButtonClass : null,\r\n\t\tcancelButtonColor : '#999999',\r\n\t\tcancelButtonText : 'Cancel',\r\n\t\tconfirmButtonClass : null,\r\n\t\tconfirmButtonColor : '#5B6ABF',\r\n\t\tconfirmButtonText : 'OK',\r\n\t\tcustomClass : null,\r\n\t\tfocusCancel : false,\r\n\t\tfocusConfirm : true,\r\n\t\tfooter : null,\r\n\t\theightAuto : true,\r\n\t\thtml : null,\r\n\t\tinput : null,\r\n\t\tinputAttributes : {},\r\n\t\tinputAutoTrim : true,\r\n\t\tinputClass : null,\r\n\t\tinputOptions : {},\r\n\t\tinputPlaceholder : '',\r\n\t\tinputValidator : null,\r\n\t\tinputValue : '',\r\n\t\tonBeforeOpen : null,\r\n\t\tonCancel : null,\r\n\t\tonClose : null,\r\n\t\tonConfirm : null,\r\n\t\tonConfirmOrDismiss : null,\r\n\t\tonDismiss : null,\r\n\t\tonEscape : null,\r\n\t\tonOpen : null,\r\n\t\tonOutsideClick : null,\r\n\t\tpadding : null,\r\n\t\tposition : 'center',\r\n\t\tpreConfirm : null,\r\n\t\treverseButtons : false,\r\n\t\tshow : false,\r\n\t\tshowCancelButton : false,\r\n\t\tshowCloseButton : false,\r\n\t\tshowConfirmButton : true,\r\n\t\tshowLoaderOnConfirm : false,\r\n\t\tstopKeydownPropagation : true,\r\n\t\ttext : null,\r\n\t\ttitle : null,\r\n\t\ttype : null,\r\n\t\twidth : null,\r\n\t};\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.createAlert();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tthis.createAlert();\r\n\t}\r\n\t\r\n\tcreateAlert() {\r\n\t\tif (!this.props.show) { return; }\r\n    let props = JSON.parse(JSON.stringify(this.props));\r\n\t\tdelete props.onCancel;\r\n\t\tdelete props.onConfirm;\r\n\t\tdelete props.onConfirmOrDismiss;\r\n\t\tdelete props.onDismiss;\r\n\t\tdelete props.onEscape;\r\n\t\tdelete props.onOutsideClick;\r\n\t\tdelete props.show;\r\n\t\tif (this.props.onOpen) { props.onOpen = this.props.onOpen; }\r\n\t\tif (this.props.onBeforeOpen) { this.props.onBeforeOpen(); }\r\n\t\tSwal.fire( {...props})\r\n\t\t\t\r\n\t\t\r\n\t\t.then(result => {\r\n\t\t\tif (result.hasOwnProperty('dismiss')) {\r\n\t\t\t\tconst dismissalType = result['dismiss'];\r\n\t\t\t\tif (this.props.onCancel && dismissalType === 'cancel') { this.props.onCancel(); }\r\n\t\t\t\tif (this.props.onClose && dismissalType === 'close') { this.props.onClose(); }\r\n\t\t\t\tif (this.props.onEscape && dismissalType === 'esc') { this.props.onEscape(); }\r\n\t\t\t\tif (this.props.onOutsideClick && dismissalType === 'overlay') { this.props.onOutsideClick(); }\r\n\t\t\t\tif (this.props.onDismiss) { this.props.onDismiss(dismissalType); }\r\n\t\t\t}\r\n\t\t\tif (result.hasOwnProperty('value') && this.props.onConfirm) { this.props.onConfirm(result); }\r\n\t\t\tif (this.props.onConfirmOrDismiss) { this.props.onConfirmOrDismiss(result); }\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() { return null; }\r\n}\r\n\r\nexport default Alert;","import Alert from './alert';\r\nimport React, { Component } from 'react';\r\nimport s from './alert.module.css';\r\n\r\nclass Alert2 extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      interpretedAlert: null,\r\n      showDeclarative: false,\r\n    };\r\n  }\r\n\r\n  declarativeAlert() {\r\n    this.setState({ showDeclarative: true });\r\n  }\r\n\r\n  interpretedAlert() {\r\n    const interpretedAlert = (\r\n      <Alert\r\n        onConfirmOrDismiss={() => this.setState({ interpretedAlert: null })}\r\n        show={true}\r\n        text={'This one is dynamically added and removed from the render() function'}\r\n        title={'Interpreted'}\r\n        type={'warning'}\r\n      />\r\n    );\r\n    this.setState({ interpretedAlert: interpretedAlert });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.interpretedAlert}\r\n        <Alert\r\n          onConfirmOrDismiss={() => this.setState({ showDeclarative: false })}\r\n          show={this.state.showDeclarative}\r\n          showCancelButton={true}\r\n          text={'This one is declaratively rendered and toggled based on state'}\r\n          title={'Declarative'}\r\n          type={'info'}\r\n        />\r\n        <p onClick={() => this.interpretedAlert()}>\r\n          Click here to see the interpreted alert\r\n        </p>\r\n        <br />\r\n        <p onClick={() => this.declarativeAlert()}>\r\n          Click here to see the declarative alert\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Alert2; \r\n","import React, { useState, useEffect,FC } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileDataForm from \"./ProfileDataForm\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport Alert2 from \"../../common/Alert/alert2\"\r\nimport { profileType, contactsType } from \"../../types/types\";\r\n/* type PropsType ={  \r\n  profile:profileType,\r\n  status:string,\r\n  updateStatus:string,\r\n  isOwner:boolean,\r\n  savePhoto:any,\r\n  error:any,\r\n  saveProfile:any\r\n} */\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto,  error, saveProfile }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [isSaveProfile,setIsSaveProfileCome]=useState(false)\r\n    \r\n    useEffect(function(){\r\n        if(!setIsSaveProfileCome(false)){\r\n\r\n        setEditMode(false)\r\n        \r\n        \r\n    } \r\n      }, [isSaveProfile]) \r\n    if(!profile){ return <Preloader/>}\r\n  \r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n\r\n        }\r\n\r\n    }\r\n    const onSubmit = (formData) => {\r\n        //saveProfile(formData);\r\n        //setEditMode(false)\r\n       saveProfile(formData)\r\n       setIsSaveProfileCome(true)\r\n       /*  .then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        ) */\r\n    }\r\n        \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div><img src={\"https://klike.net/uploads/posts/2019-01/1547365376_1.jpg\"} /></div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.userPhoto} />\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                <div> <b>Status</b> <ProfileStatusWithHooks error={error}status={status} updateStatus={updateStatus} /> </div>\r\n                <div>  {editMode ? <ProfileDataForm initialValues={profile} profile={profile}  onSubmit={onSubmit} \r\n                  /> :\r\n                 <ProfileData profile={profile} isOwner={isOwner}\r\n                    toEditMode={() => { setEditMode(true) }} />} </div>\r\n                    <div><Alert2 error={error}/></div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n/* type ProfileDataType={\r\n    profile:profileType,\r\n    isOwner:boolean,\r\n    toEditMode:any\r\n\r\n} */\r\n\r\nconst ProfileData = ({ profile, isOwner, toEditMode }) => {\r\n    return (\r\n        <div>\r\n            <div>{isOwner && <button onClick={toEditMode}>edit</button>} </div>\r\n\r\n            {/*<textarea value={aboutMe} cols=\"30\" rows=\"10\"/>*/}\r\n            <div> <b>About me</b> {profile.aboutMe} </div>\r\n            {/*     <div>{\"Poisk raboty:\" + profile.lookingForAJobDescription}</div>\r\n            <div>{profile.lookingForAJob === true ?\r\n                <img className={s.poiskRabotyPhoto} src={\"https://ruherald.com/wp-content/uploads/2018/06/jobs5.jpg\"} /> : null}</div> */}\r\n            {/*<>{props.profile.contacts}</>*/}\r\n\r\n\r\n            <div>\r\n                <b>Fullname</b>  {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>contacts</b>: {Object\r\n                    .keys(profile.contacts).map(                   \r\n                        (key) => {\r\n                        return <Contact key={key}\r\n                            contactTitle={key} contactValue={profile.contacts[key]}  />\r\n                    })}\r\n            </div>\r\n            {/*    <div>\r\n                <div>{profile.contacts.facebook}</div>\r\n                <div>{profile.contacts.youtube}</div>\r\n                <div>{profile.contacts.vk}</div>\r\n                <div>{profile.contacts.instagram}</div>\r\n                <div>{profile.contacts.github}</div>\r\n                <div>{profile.contacts.twitter}</div>\r\n                <div>{profile.contacts.website}</div>\r\n            </div> */}\r\n        </div>\r\n\r\n    )\r\n}\r\n/* type ContactType={\r\n    contactValue:any,\r\n    contactTitle:any\r\n} */\r\nexport const Contact= ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contacts}>  <b>{contactTitle}</b>:{contactValue}\r\n    </div>\r\n\r\n\r\n}\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n\r\n            <img src={\"https://cdn3.iconfinder.com/data/icons/many-peoples-vol-2/512/16-512.png\"}/>\r\n            {props.message}\r\n\r\n\r\n            <div>\r\n                <span>\r\n                    <img src={\"https://img.icons8.com/plasticine/2x/like--v1.png\"}/>\r\n                    {props.likescount}\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { maxLengthCreator,  required} from \"../../../validators/validators\";\r\nimport { Textarea } from \"../../common/formControls/formControls\";\r\n\r\nconst maxLength10=maxLengthCreator(10);\r\nconst MyPostsForm = (props) => {\r\n\r\n    //let newPost = React.createRef();\r\n\r\n    // let onButton = () => {\r\n    //     props.onButtonClick();\r\n        // eslint-disable-next-line no-undef\r\n        // props.dispatch(onButtonClickEventActionCreator());    }\r\n    //let onPostChange = (e) => {\r\n    //     // let text = newPost.current.value;\r\n    //     let text = e.target.value;\r\n    //     props.updateNewPostText(text);\r\n    //     // let action=updateNewPostTextActionCreator(text);\r\n    //     // props.dispatch(action);\r\n    // }\r\n    // let newPostText = props.newPostText;\r\n    \r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field   name={\"newPostText\"} component={Textarea} placeholder={\"enter message\"}\r\n                         validate={[required, maxLength10]}  />\r\n            </div>\r\n\r\n            <div>\r\n                <button >Press</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n export const MyPostsReduxForm=reduxForm({\r\n    // a unique name for the form\r\n    form: 'MyPostsForm'\r\n})(MyPostsForm);\r\n\r\n\r\n//  const MyPostsInForm = (props) => {\r\n//     return (\r\n//         <div>\r\n//             <MyPostsReduxForm onSubmit={props.onSubmit} />\r\n//         </div>\r\n//     )\r\n// }\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         posts: state.profilePage.posts,\r\n//         newPostText: state.profilePage.newPostText\r\n//     }\r\n// }\r\n//\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         onButtonClick: () => {\r\n//             dispatch(onButtonClickEventActionCreator());\r\n//         },\r\n//         updateNewPostText: (text) => {\r\n//             dispatch(updateNewPostTextActionCreator(text))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { MyPostsReduxForm } from \"../MyPostsForm/MyPostsForm\";\r\nimport { reset } from 'redux-form'\r\nimport { render } from \"@testing-library/react\";\r\n\r\n//window.props=[];\r\nconst MyPosts=React.memo(props=>  {\r\n    /* window.props.push(props);\r\n    console.log(\"render\");\r\n    console.log(props); */\r\n\r\n\r\n    //let newPost = React.createRef();\r\n    // let onButton = () => {\r\n    //     props.onButtonClick();\r\n    //     // eslint-disable-next-line no-undef\r\n    //     // props.dispatch(onButtonClickEventActionCreator());\r\n    //\r\n    // }\r\n    //\r\n    // let onPostChange = (e) => {\r\n    //     // let text = newPost.current.value;\r\n    //     let text = e.target.value;\r\n    //     props.updateNewPostText(text);\r\n    //     // let action=updateNewPostTextActionCreator(text);\r\n    //     // props.dispatch(action);\r\n    // }\r\n    //\r\n    // let newPostText = props.newPostText;\r\n    /* componentDidUpdate() {\r\n        console.log(\"componentDidUpdate\")\r\n    } */\r\n  /*   componentDidMount (){\r\n        setTimeout(()=>{\r\n            this.setState({a:12})\r\n        },3000)\r\n\r\n    } */\r\n   /*  shouldComponentUpdate(nextProps,nextState){\r\n      return  nextProps !=this.props || nextState!=this.state \r\n\r\n    }  */\r\n\r\n    /* \r\n        console.log(\"render\");\r\n        console.log(props); */\r\n\r\n        let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post  message={p.message} key={p.id} likescount={p.likescount} />);\r\n        let addNewPostText = (value, dispatch) => {\r\n            props.onButtonClick(value.newPostText);\r\n            dispatch(reset('MyPostsForm'))\r\n        }\r\n\r\n        \r\n        return (\r\n\r\n            <div className={s.postsBlock}>\r\n                <div><h3> My post </h3>\r\n                    <div>\r\n                        <MyPostsReduxForm onSubmit={addNewPostText} {...props} />\r\n                    </div>\r\n                    {/*<div>*/}\r\n                    {/*    <textarea onChange={onPostChange} placeholder={\"enter svoi posty\"} value={newPostText}/>*/}\r\n                    {/*</div>*/}\r\n                    {/*<div>*/}\r\n                    {/*    <button onClick={onButton}>Add post</button>*/}\r\n                    {/*</div>*/}\r\n\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n)\r\n// function MyPostsForm (props) {\r\n//\r\n//     //let newPost = React.createRef();\r\n//\r\n//     // let onButton = () => {\r\n//     //     props.onButtonClick();\r\n//     // eslint-disable-next-line no-undef\r\n//     // props.dispatch(onButtonClickEventActionCreator());    }\r\n//     //let onPostChange = (e) => {\r\n//     //     // let text = newPost.current.value;\r\n//     //     let text = e.target.value;\r\n//     //     props.updateNewPostText(text);\r\n//     //     // let action=updateNewPostTextActionCreator(text);\r\n//     //     // props.dispatch(action);\r\n//     // }\r\n//     // let newPostText = props.newPostText;\r\n//     return (\r\n//\r\n//         <form onSubmit={props.handleSubmit} >\r\n//             <div>\r\n//                 < Field   name={\"newPostText\"} component={\"textarea\"}\r\n//                           placeholder={\"Enter your post\"} validate={[required, maxLength]} typeField={textareaForm}/>\r\n//             </div>\r\n//\r\n//             <div>\r\n//                 <button >Press</button>\r\n//             </div>\r\n//         </form>\r\n//     )\r\n// }\r\n// const MyPostsReduxForm=reduxForm({\r\n//     // a unique name for the form\r\n//     form: 'MyPostsForm'\r\n// })(MyPostsForm);\r\nexport default MyPosts;","import {onButtonClickEventActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onButtonClick: (newPostText) => {\r\n            dispatch(onButtonClickEventActionCreator(newPostText));\r\n        },\r\n        // updateNewPostText: (text) => {\r\n        //     dispatch(updateNewPostTextActionCreator(text))\r\n        // }\r\n    }\r\n}\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n//\r\n//     return (\r\n//         <ContextStore.Consumer>{(store)=> {\r\n//             let state = store.getState();\r\n//             let onButtonClick = () => {\r\n//                 // eslint-disable-next-line no-undef\r\n//                 store.dispatch(onButtonClickEventActionCreator());\r\n//             }\r\n//             let onPostChange = (text) => {\r\n//                 let action = updateNewPostTextActionCreator(text);\r\n//                 store.dispatch(action);\r\n//             }\r\n//             return(<MyPosts updateNewPostText={(onPostChange)} onButtonClick={(onButtonClick)} posts={state.profilePage.posts}\r\n//                      newPostText={state.profilePage.newPostText}/>)}}\r\n//\r\n//         </ContextStore.Consumer>\r\n//     )}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps )(MyPosts);\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nwindow.props = []\r\nconst Profile = (props) => {\r\n   // window.props.push(props)\r\n\r\n   // console.log(\"profile\");\r\n    return (\r\n        <div>\r\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} error={props.error} \r\n            isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile } from \"../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n//import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshMethod() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authUserId\r\n        } if (!userId) { this.props.history.push(\"/login\") }\r\n        //axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+userId)\r\n        //\r\n        this.props.getUserProfile(userId);\r\n        // setTimeout(()=>{\r\n        this.props.getStatus(userId);\r\n        // }, 1000)\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.refreshMethod();\r\n\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //na luboi chih update, poetomu stavim uslovie\r\n        if (this.props.match.params.userId != prevProps.match.params.userId)\r\n         { this.refreshMethod() }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        //console.log(\"component render\")\r\n\r\n        return (\r\n            <Profile savePhoto={this.props.savePhoto}\r\n                isOwner={!this.props.match.params.userId}\r\n                {...this.props} profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                saveProfile={this.props.saveProfile}\r\n                error={this.props.error} />\r\n        )\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent=withAuthRedirect(ProfileContainer);\r\n\r\n// let mapStateToPropsForRedirect=(state)=>({\r\n//     isAuth:state.auth.isAuth\r\n// });\r\n// AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n\r\n// (props)=>{\r\n// if(!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n//\r\n// return <ProfileContainer {...props}/>}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log(\"mapStateToProps render\");\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        error: state.profilePage.error \r\n\r\n\r\n    })\r\n};\r\n// let withUrlDataContainerComponent=withRouter(AuthRedirectComponent);\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile\r\n}), withRouter)(ProfileContainer);\r\n;"],"sourceRoot":""}