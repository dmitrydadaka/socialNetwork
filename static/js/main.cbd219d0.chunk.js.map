{"version":3,"sources":["components/NavBar/Navbar.module.css","assets/images/user.png","components/Users/Users.module.css","assets/images/preloader.svg","API/api.js","serviceWorker.js","redux/friendsReducer.js","utils/objectHelpers.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/reduxStoreNew.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Friends/Friends.jsx","components/NavBar/NavBar.jsx","components/NavBar/NavBarContainer.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","login/Login.jsx","App.js","index.js","components/common/formControls/formControls.jsx","components/common/Preloader/Preloader.jsx","components/common/formControls/FormControls.module.css","components/common/Paginator/Paginator.module.css","validators/validators.js","components/Friends/Friends.module.css","components/Header/Header.module.css","redux/dialogsReducer.js","redux/profileReducer.js","hoc/withAuthRedirect.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","UsersAPI","getUsers","currentPage","pageSize","get","unfollowFriends","userId","delete","followFriends","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","startState","avatars","id","name","avatar","friendsReducer","state","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","type","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","toggleIsFollowingProgress","followUnfollow","dispatch","apiFunction","actionCreator","a","data","resultCode","usersReducer","action","followed","filter","isAuth","setAuthUserData","payload","getAuthUserData","response","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","friendsPage","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","News","props","Music","Settings","Friends","className","s","src","log","NavBar","avatarsNew","k","nav","item","to","activeClassName","activeLink","NavBarContainer","connect","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","photo","photos","small","userPhoto","disabled","some","unFollow","Follow","Users","getUsersSuperSelector","createSelector","getPageSize","getTotalUsersCount","getIsFetching","getFollowingInProgress","getCurrentPage","UsersContainer","this","React","Component","bind","then","totalCount","Header","header","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","Input","required","style","formSummaryControl","message","messages","length","stopSubmit","_error","formData","ProfileContainer","lazy","DialogsContainer","App","initializeApp","fallback","Preloader","path","render","withSuspense","LoginPage","AppContainer","withRouter","AppReactSamuraiJS","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restprops","child","component","validators","placeholder","text","validate","preloader","value","maxLengthCreator","maxLength","dialogs","onButtonClickEventMessageActionCreator","newPostTextInDialogs","newPost","posts","likescount","profile","onButtonClickEventActionCreator","newPostText","setStatusAC","getUserProfile","postId"],"mappings":"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","file":"static/js/main.cbd219d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__31IqN\",\"item\":\"Navbar_item__FlENb\",\"activeLink\":\"Navbar_activeLink__2ozlJ\"};","module.exports = __webpack_public_path__ + \"static/media/user.d7a59735.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__3rYv-\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.ee41e0f0.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create(\r\n    { \r\n        withCredentials: true,\r\n        baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n        headers: {\r\n            \"API-KEY\": \"1dffc49c-e668-4c39-b402-3387832efdf9\"\r\n        }\r\n    }\r\n)\r\nexport const UsersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\r\n    },\r\n    unfollowFriends(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    followFriends(userId) {\r\n        return instance.post(`follow/${userId}`, {})\r\n\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please, use profileAPI object!\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n};\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status:status})\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(\"auth/me\")\r\n    },\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`,{email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let startState={\r\n    avatars: [\r\n        {\r\n            id: 1,\r\n            name: \"Dima\",\r\n            avatar: \"https://cdn5.vectorstock.com/i/1000x1000/85/39/cartoon-man-icon-vector-14418539.jpg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Vasya\",\r\n            avatar: \"https://www.vippng.com/png/detail/105-1058737_free-vector-smart-guy-character-vector-characters-png.png\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Egorka\",\r\n            avatar: \"https://library.kissclipart.com/20181213/vuw/kissclipart-business-man-cartoon-clipart-businessperson-capita-e980109693cfe80f.jpg \"\r\n        }\r\n\r\n    ]\r\n}\r\nconst friendsReducer=(state=startState)=>{\r\n    return state;\r\n}\r\nexport default friendsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) =>{\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ... newObjProps }\r\n        }\r\n        return u\r\n    })\r\n\r\n\r\n}\r\n ","import { UsersAPI } from \"../API/api\";\r\nimport { updateObjectInArray } from \"../utils/objectHelpers\" ;\r\n\r\n// const Follow = \"Follow\";\r\n// const unFollow = \"unFollow\";\r\n// const setUsers = \"setUsers\";\r\n// const setCurrentPage = \"setCurrentPage\";\r\n// const setTotalUsersCount = \"setTotalUsersCount\";\r\n// const toggleIsFetching = \"toggleIsFetching\";\r\n// const toggleIsFollowingProgress = \"toggleIsFollowingProgress\";\r\n\r\n\r\nconst startState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = startState, action) => {\r\n    switch (action.type) {\r\n/*         case \"fake\": return{...state, fake:state.fake+1}\r\n */        case \"Follow\":\r\n            return {\r\n                ...state,\r\n                // users:[...state.users] odno i toge\r\n                users:updateObjectInArray(state.users, action.userId,\"id\" , {followed:true})\r\n                /*  state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u\r\n                }) */\r\n            };\r\n        case \"unFollow\":\r\n            return {\r\n                ...state,\r\n                // users:[...state.users] odno i toge\r\n                users:updateObjectInArray(state.users, action.userId,\"id\", {followed:false})\r\n                /*  state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u\r\n                }) */\r\n            };\r\n        case \"setUsers\": {\r\n            return { ...state, users: [...action.users] }//skleivaem 2 spread operator\r\n        }\r\n            ;\r\n        case \"setCurrentPage\": {\r\n            return { ...state, currentPage: action.currentPage }\r\n\r\n        }\r\n            ;\r\n        case \"setTotalUsersCount\": {\r\n            return { ...state, totalUsersCount: action.count }\r\n\r\n        }\r\n            ;\r\n        case \"toggleIsFetching\": {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case \"toggleIsFollowingProgress\": {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const followSuccess = (userId) => ({ type: \"Follow\", userId });\r\nexport const unfollowSuccess = (userId) => ({ type: \"unFollow\", userId });\r\nexport const setUsers = (users) => ({ type: \"setUsers\", users });\r\nexport const setCurrentPage = (currentPage) => ({ type: \"setCurrentPage\", currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: \"setTotalUsersCount\", count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: \"toggleIsFetching\", isFetching });\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: \"toggleIsFollowingProgress\",\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (currentPage = 1, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(toggleIsFetching(true));\r\n        UsersAPI.getUsers(currentPage, pageSize).then(response => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(response.data.items));\r\n            dispatch(setTotalUsersCount(response.data.totalCount));\r\n        })\r\n\r\n    }\r\n}\r\nconst followUnfollow = async (dispatch, userId, apiFunction, actionCreator) => {\r\n    \r\n        dispatch(toggleIsFollowingProgress(true, userId));\r\n\r\n    let response = await apiFunction(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n\r\n}\r\n\r\n\r\n\r\nexport const Follow = (userId) => {\r\n    return async (dispatch) => {\r\n        /* let apiFunction = UsersAPI.followFriends.bind(UsersAPI);\r\n        let actionCreator = followSuccess; */\r\n        followUnfollow(dispatch, userId, UsersAPI.followFriends.bind(UsersAPI), followSuccess)\r\n\r\n\r\n    }\r\n}\r\n    export const unFollow = (userId) => {\r\n        return async (dispatch) => { \r\n        /* let apiFunction = UsersAPI.unfollowFriends.bind(UsersAPI);\r\n        let actionCreator = unfollowSuccess; */\r\n        followUnfollow(dispatch, userId,  UsersAPI.unfollowFriends.bind(UsersAPI), unfollowSuccess)\r\n\r\n\r\n    }\r\n}\r\n\r\n    export default usersReducer;","import { authAPI } from \"../API/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst setUserData = \"setUserData\";\r\n\r\n\r\nlet startState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\nconst authReducer = (state = startState, action) => {\r\n    switch (action.type) {\r\n        case setUserData:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({ type: setUserData, payload: { userId, email, login, isAuth } });\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    /*  .then(response => { */\r\n    if (response.data.resultCode === 0) {\r\n        let\r\n            { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n    return \"vau\";\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    /*  let action=stopSubmit(\"login\", {_error:\"CommonError\"});\r\n             dispatch(action) */\r\n\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    /* .then(response => { */\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\"\r\n        dispatch(stopSubmit(\"login\", { _error: message }))\r\n    }\r\n\r\n\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst initializedSuccess = \"initializedSuccess\";\r\n\r\n\r\nlet startState = {\r\n    initialized: false\r\n};\r\nconst appReducer = (state = startState, action) => {\r\n    switch (action.type) {\r\n        case initializedSuccess:\r\n\r\n            return {\r\n                ...state,\r\n                initialized:true\r\n\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const initializedSuccessAC = () =>\r\n    ({ type: initializedSuccess });\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise=dispatch(getAuthUserData());\r\n   //promise.all([promise1,promise2]) esli nesk promisov\r\n   promise.then(() => {(\r\n   dispatch(initializedSuccessAC()));\r\n   }) \r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport  thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        friendsPage: friendsReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        app:appReducer,\r\n        form: formReducer\r\n    }\r\n);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers( applyMiddleware(thunkMiddleware) ));\r\n//const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow._store_ = store;\r\nexport default store;","import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\n\r\nconst News= (props) => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Music.module.css\"\r\n\r\n\r\nconst Music= (props) => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Music;","import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\n\r\nconst Settings= (props) => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Settings;","import React from \"react\";\r\nimport s from \"./Friends.module.css\"\r\n\r\n\r\nconst Friends = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.avatar} src={props.avatar}  />\r\n            </div>\r\n            <div className={s.name}>\r\n                {props.name}\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Friends;","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"../Friends/Friends\";\r\n\r\n\r\nconsole.log(s)\r\n\r\n// let s={\r\n//     \"nav\": \"Navbar_nav__2h6Uu\",\r\n//     \"item\":\"Navbar_item__3rIFF\"\r\n//     \"activ\": \"jfkhkdhkjfh\"\r\n// }\r\n\r\n// let c1 = \"item\";\r\n// let c2 = \"active\";\r\n// \"item active\"\r\n// let classes = c1 + \" \" + c2;\r\n// let classesNew=`${c1} ${c2}`;\r\n//     `${s.item} ${s.active}`\r\n\r\nconst NavBar = (props) =>{\r\n\r\n    let state=props.friendsPage;\r\n\r\n    let avatarsNew= state.avatars.map(a=> <Friends k={a.id} name={a.name} avatar={a.avatar}/>)\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to={\"profile\"} activeClassName={s.activeLink}> Profile </NavLink></div>\r\n            <div className={s.item}><NavLink to={\"dialogs\"} activeClassName={s.activeLink}> Messages </NavLink></div>\r\n            <div className={s.item}><NavLink to={\"news\"} activeClassName={s.activeLink}> News </NavLink></div>\r\n            <div className={s.item}><NavLink to={\"Music\"} activeClassName={s.activeLink}> Music </NavLink></div>\r\n            <div className={s.item}><NavLink to={\"settings\"} activeClassName={s.activeLink}> Settings </NavLink></div>\r\n            <div className={s.item}><NavLink to={\"users\"} activeClassName={s.activeLink}> Users </NavLink></div>\r\n            <div className={s.item}><NavLink to={\"friends\"} activeClassName={s.activeLink}> <h3>Friends</h3> </NavLink>\r\n                <div>\r\n                    {avatarsNew}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps=(state)=>{\r\n\r\n    return {\r\n        friendsPage: state.friendsPage\r\n    }\r\n};\r\n\r\nconst NavBarContainer=connect(mapStateToProps)(NavBar);\r\nexport default  NavBarContainer;\r\n\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\"\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount=Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber]=useState(1);\r\n    let leftPortionPageNumber=(portionNumber-1)*portionSize+1;\r\n    let rightPortionPageNumber=portionNumber*portionSize;\r\n\r\n\r\n    return (\r\n        \r\n           <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = (props) => {\r\n   const u=props.user\r\n\r\n    return (\r\n         <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={\"/profile/\" + u.id}>\r\n                        <img className={s.photo} src={u.photos.small != null ? u.photos.small : userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed ?\r\n                            <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unFollow(u.id)\r\n                                \r\n                                \r\n\r\n\r\n                            }}>unFollow</button> :\r\n                            <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.Follow(u.id)}}\r\n                              \r\n\r\n                            >Follow</button>}\r\n                    </div>\r\n                    </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}  </div>\r\n                        <div> {u.status}  </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>  {\"u.location.country\"}</div>\r\n                        <div>  {\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)}\r\n    \r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\"\r\n\r\n\r\nlet Users = (props) => {\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} \r\n                currentPage={props.currentPage} onPageChanged={props.onPageChanged} />\r\n            </div>   \r\n            {props.users.map(u => <User user={u} key={u.id} followingInProgress={props.followingInProgress}\r\n             Follow={props.Follow} unFollow={props.unFollow} />)}\r\n                \r\n        </div>)\r\n\r\n}\r\nexport default Users;","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsersForProfile=(state)=>{\r\n    return state.usersPage.users;\r\n}\r\n/* export const getUsersSelector=(state)=>{\r\n    return getUsersForProfile(state).filter(u=>true)\r\n} */\r\nexport const getUsersSuperSelector=createSelector(getUsersForProfile,  (users)=>{\r\n    return users.filter(u=>true)\r\n})\r\n\r\nexport const getPageSize=(state)=>{\r\n    return state.usersPage.pageSize\r\n} \r\nexport const getTotalUsersCount=(state)=>{\r\n    return state.usersPage.totalUsersCount\r\n} \r\nexport const getIsFetching=(state)=>{\r\n    return state.usersPage.isFetching\r\n} \r\nexport const getFollowingInProgress=(state)=>{\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getCurrentPage=(state)=>{\r\n    return state.usersPage.currentPage\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {Follow, getUsers} from \"../../redux/usersReducer\";\r\nimport {unFollow} from \"../../redux/usersReducer\";\r\nimport {compose} from \"redux\";\r\nimport {getFollowingInProgress, getIsFetching, getTotalUsersCount, getCurrentPage, getPageSize, getUsersSuperSelector} from \"../../redux/usersSelectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    // constructor(props) {po ymolchaniuy pishetsya reactcomponent, kotoryi my nasledyem rashiryaem\r\n    //     super(props);konstruktor po ymolchaniyu cosdaetsya\r\n    // }\r\n\r\n\r\n    componentDidMount(){\r\n        // this.props.toggleIsFetching(true);\r\n        // alert(\"new\")\r\n        // getUsers=()=>  {\r\n        //     if(this.props.users.length===0) {\r\n        //   y Dimy zdec' toge zapros na servac\r\n\r\n        // UsersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false);\r\n        //     this.props.setUsers(data.items);\r\n        //     this.props.setTotalUsersCount(data.totalCount);\r\n        // })\r\n        const {currentPage, pageSize}=this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize}=this.props\r\n        this.props.getUsers(pageNumber, pageSize);\r\n\r\n        \r\n        // this.props.toggleIsFetching(true);\r\n        //\r\n        // // axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\r\n        // //     {withCredentials: true})\r\n        // UsersAPI.getUsers\r\n        // (pageNumber, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false);\r\n        //     this.props.setUsers(data.items);\r\n        // })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n/* console.log(\"Users\")\r\n */        return (<>\r\n               {/*  {this.props.isFetching ? <Preloader/> : null} */}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       Follow={this.props.Follow}\r\n                       unFollow={this.props.unFollow}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                />\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n/*     console.log(\"mapStateToProps Users\")\r\n */    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress:getFollowingInProgress(state)\r\n    }\r\n}\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         Follow: (userId) => {\r\n//             dispatch(followAC(userId));\r\n//         },\r\n//         unFollow: (userId) => {\r\n//             dispatch(unFollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalUsersCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalUsersCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps,\r\n//     {\r\n//         Follow: followAC,\r\n//         unFollow: unFollowAC,\r\n//         setUsers: setUsersAC,\r\n//         setCurrentPage: setCurrentPageAC,\r\n//         setTotalUsersCount: setTotalUsersCountAC,\r\n//         toggleIsFetching: toggleIsFetchingAC\r\n//     })(UsersContainer);\r\n//let withRedirect=withAuthRedirect(UsersContainer)\r\n// export default withAuthRedirect(connect(mapStateToProps,\r\n//     {\r\n//         Follow,\r\n//         unFollow,\r\n//         getUsers\r\n//     })(UsersContainer));\r\nexport default compose(connect(mapStateToProps,\r\n    {\r\n        Follow,\r\n        unFollow,\r\n        getUsers\r\n    }))(UsersContainer);","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        \r\n\r\n            <header className={s.header}>\r\n                <img src=\"https://s1.logaster.com/static/v3/img/products/logo.png\"/>\r\n                <div className={s.loginBlock}>\r\n                    {props.isAuth ? <div> {props.login}  <button onClick={props.logout}>Logout</button></div>: \r\n                    <NavLink to={\"/login\"}>login</NavLink>}\r\n                </div>\r\n            </header>\r\n\r\n        \r\n            )\r\n}\r\n        export default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps,{ logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { Input, createField } from \"../components/common/formControls/formControls\";\r\nimport { required } from \"../validators/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport {login} from \"../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../components/common/formControls/FormControls.module.css\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error,  props}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(Input, [required], \"email\", \"email\")}\r\n            {createField(Input, [required], \"password\", \"password\", {type:\"password\"})}\r\n            {createField(Input, [], \"rememberMe\", null, {type:\"checkbox\"}, \"remember me\")}\r\n\r\n\r\n            {/* <div>\r\n                < Field component={Input}  validate={[required]} name={\"email\"}\r\n                 placeholder={\"email\"}/>\r\n            </div>\r\n            <div>\r\n                < Field component={Input} validate={[required]} type={\"password\"}\r\n                 name={\"password\"} placeholder={\"password\"}/>\r\n\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/>\r\n                remember me\r\n            </div> */}\r\n            {error&&<div className={style.formSummaryControl}>\r\n               {error}\r\n            </div>}\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        //console.log(formData);\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n        //na samom dele eto ne sanka. eto callback iz connect, kotoryi vyzyvaet sanky\r\n   \r\n    }\r\n    if(props.isAuth){\r\n       return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    \r\n        isAuth: state.auth.isAuth\r\n    \r\n})\r\n\r\nexport default connect(mapStateToProps,{login}) (Login);","import React, { Component,Suspense } from 'react';\nimport \"./App.css\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport { HashRouter, Route, withRouter } from \"react-router-dom\";\nimport Friends from \"./components/Friends/Friends\";\n/* import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n */import NavBarContainer from \"./components/NavBar/NavBarContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n/* import ProfileContainer from \"./components/Profile/ProfileContainer\";\n */import HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./login/Login\";\nimport { connect, Provider } from 'react-redux';\nimport { initializeApp } from \"./redux/appReducer\";\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from \"./redux/reduxStoreNew\";\nimport { withSuspense } from './hoc/withAuthRedirect';\n\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        //axios.get(\"https://social-network.samuraijs.com/api/1.0/auth/me\", {withCredentials: true})\n\n        // authAPI.me()\n        //     .then(response => {\n        //         if (response.data.resultCode === 0) {\n        //             let {id, email, login} = response.data.data;\n        //             this.props.setAuthUserData(id, email, login);\n        //         }\n        //     })\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n\n        }\n\n        return (\n\n            <div className={\"app-wrapper\"}>\n                {/*  <Redirect from=\"/\" to =\"/login\"/> */}\n                <HeaderContainer />\n                <NavBarContainer />\n                <div className={\"app-wrapper-content\"}>\n                {/* <Route exact path='/'\n                               render={() => <Redirect to={\"/profile\"}/>}/> */}\n\n                    <Suspense fallback={<Preloader/>}>\n                        <Route path={\"/profile/:userId?\"} render={() => <ProfileContainer />} />\n                        <Route path={\"/dialogs\"} render={() => <DialogsContainer />} />\n                        <Route path={\"/users\"} render={()=> <UsersContainer/>} />\n\n                    </Suspense>\n                    {/* <Route path={\"/profile/:userId?\"} render={() => <ProfileContainer />} />\n                    <Route path={\"/dialogs\"} render={() => <DialogsContainer />} /> */}\n                    <Route path={\"/news\"} render={() => <News />} />\n                    <Route path={\"/music\"} render={() => <Music />} />\n                    <Route path={\"/settings\"} render={() => <Settings />} />\n                    {/*  */}<Route path={\"/users\"} render={() => <UsersContainer />} />\n                    <Route path={\"/login\"} render={withSuspense(LoginPage)} />\n\n\n{/*                     <Route path={\"/login\"} render={() => <LoginPage />} />\n */}\n                    <Route path={\"/friends\"} render={() => <Friends />} />\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, { initializeApp }))(App);\n\nconst AppReactSamuraiJS = (props) => {\n    return (\n        <HashRouter >\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>)\n}\nexport default AppReactSamuraiJS;","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/reduxStoreNew\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppReactSamuraiJS from './App';\n// import {Provider} from \"./ContextStore\";\n/* setInterval(()=>{\n    store.dispatch({type:\"fake\"})\n},1000); */\n\n\n\n// export let rerenderEntireTree = (state) => {}\n\n    ReactDOM.render(<AppReactSamuraiJS/>, document.getElementById('root'));\n\n\n\n// rerenderEntireTree(store.getState());\n// // store.subscribe(() => {\n// //     let state = store.getState();\n// //     rerenderEntireTree(state);\n// // })\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\nexport const FormControl = ({ input, meta:{touched, error}, children, ...props }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div>\r\n            <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n                {children}\r\n              {/*   {React.createElement(el, {...input, ...props})}  */}\r\n              {/*   {props.types === \"input\" ? <input {...input} {...props} /> : <textarea {...input} {...props} />} */}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const{input,meta, child, ...restprops}=props\r\n\r\n    return (<FormControl {...props}  > <textarea {... input} {...restprops}/></FormControl>)\r\n\r\n\r\n}\r\nexport const Input = (props) => {\r\n    const{input,meta, child, ...restprops}=props\r\n\r\n    return (<FormControl {...props}  > <input {... input} {...restprops}/></FormControl>)\r\n}\r\n\r\nexport const createField = (component,  validators, name, placeholder, props={}, text=\" \") =>\r\n (<div>\r\n        <Field component={component}  validate={validators} name={name}\r\n            placeholder={placeholder} {...props} /> {text}\r\n    </div>)\r\n\r\n//HOC\r\n/* const Element = Element => ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n      <div className={ s.formControl + \" \" + (hasError ? s.error : \"\") }>\r\n        <Element {...input} {...props} />\r\n        { hasError && <span> { meta.error } </span> }\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Textarea = Element(\"textarea\"); */\r\n\r\n\r\n/* export const InputType = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n            <div>\r\n                {props.types=== \"input\" ? <input {...input} {...props} /> : <textarea {...input} {...props} />}\r\n            </div>\r\n            {hasError && <span className={styles.errorText}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n} */ /* cherez props.types i dobavlenie v fields form svoystva types input ili textarea */\r\n","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <img src={preloader}/>\r\n\r\n    )\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1hZnh\",\"error\":\"FormControls_error__3kieA\",\"formSummaryControl\":\"FormControls_formSummaryControl__1oDtp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2Nu1e\",\"pageNumber\":\"Paginator_pageNumber__37yci\"};","export const required=value=>{\r\n    if(value) return undefined ;\r\n        return \"Field is required\";\r\n\r\n}\r\nexport const maxLengthCreator=(maxLength)=>(value)=>{\r\n\r\n    if(value.length>maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\nexport const minLengthCreator=(minLength)=>(value)=>{\r\n\r\n    if(value.length<minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n}\r\n//export const maxLength=value=>{\r\n//     if(value.length<30)   return \"More than  required\";\r\n//     return undefined;\r\n// }\r\n// export const minLength=value=>{\r\n//     if(value.length>2) return undefined;\r\n//     return \"More is required\";\r\n//\r\n// }\r\n// const maxLength = max => value =>\r\n//     value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n// export const maxLength15 = maxLength(15)\r\n// const minLength = min => value =>\r\n//     value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n// export const minLength2 = minLength(2)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Friends_avatar__1TLkd\",\"name\":\"Friends_name__3a4yJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Vuvt\",\"loginBlock\":\"Header_loginBlock__5rKvQ\"};","//const updateNewPostTextMessage = \"updateNewPostTextMessage\";\r\nconst onButtonClickEventMessage = \"onButtonClickEventMessage\";\r\nlet startState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Di\",\r\n            avatar: \"https://cdn5.vectorstock.com/i/1000x1000/85/39/cartoon-man-icon-vector-14418539.jpg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Vasily\",\r\n            avatar: \"https://www.vippng.com/png/detail/105-1058737_free-vector-smart-guy-character-vector-characters-png.png\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Egor\",\r\n            avatar: \"https://library.kissclipart.com/20181213/vuw/kissclipart-business-man-cartoon-clipart-businessperson-capita-e980109693cfe80f.jpg \"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Slav\",\r\n            avatar: \"https://img1.cgtrader.com/items/2061469/489ac341d8/man-cartoon-3d-model-max--obj-mtl-fbx-ma-mb.jpg\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Olga\",\r\n            avatar: \"https://cdn3.vectorstock.com/i/1000x1000/63/92/school-girl-cartoon-walking-vector-20296392.jpg\"\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Nasty\",\r\n            avatar: \"https://image.shutterstock.com/image-vector/happy-african-american-girl-cartoon-260nw-522003124.jpg\"\r\n        }\r\n    ],\r\n    messages: [\r\n        {message: \"Hi, how are you?\", id: 1},\r\n        {message: \"Hi, it's wonderful day\", id: 2},\r\n        {message: \"Hi, can i ask you?\", id: 3},\r\n        {message: \"Hi, go with me to play football\", id: 4},\r\n        {message: \"Hi\", id: 5},\r\n        {message: \"Hi, say your hobby, please\", id: 6}\r\n    ]\r\n\r\n}\r\nconst dialogsReducer = (state = startState, action) => {\r\n    //let stateCopy={...state, messages:[state.messages]}\r\n    //mogno prosto vynesty let stateCopy kak global a copiyu delat' vnutri action takoi glubiny kakaya est' neobhodimost'\r\n    //let stateCopy\r\n    switch (action.type) {\r\n        case onButtonClickEventMessage:\r\n            let newPost = action.newPostTextInDialogs;\r\n            //stateCopy=\r\n            return {\r\n                ...state,\r\n                messages:[...state.messages,{id: 7, message: newPost}]\r\n            };\r\n            // stateCopy.dialogs = [...state.dialogs];\r\n            // stateCopy.messages = [...state.messages];\r\n\r\n\r\n            // stateCopy.messages.push({id: 7, message: newPost});\r\n            // stateCopy.newPostTextMessage = \" \";\r\n\r\n\r\n\r\n        // case updateNewPostTextMessage:\r\n        //     // stateCopy=\r\n        //     return {...state, newPostTextInDialogs : action.body};\r\n        //     //stateCopy.newPostTextMessage = action.newPost;\r\n        // //    return stateCopy\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const onButtonClickEventMessageActionCreator = (newPostTextInDialogs) => ({type: onButtonClickEventMessage, newPostTextInDialogs});\r\n// export const updateNewPostTextMessageActionCreator = (body) => ({type: updateNewPostTextMessage, body});\r\nexport default dialogsReducer;","import { profileAPI, UsersAPI } from \"../API/api\";\r\n\r\nconst updateNewPostText = \"updateNewPostText\";\r\nconst onButtonClickEvent = \"onButtonClickEvent\";\r\nconst setUserProfile = \"setUserProfile\";\r\nconst setStatus = \"setStatus\";\r\nconst deletePost = \"deletePost\";\r\nlet startState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, how are you?\", likescount: 23 },\r\n        { id: 2, message: \"Hi, it\\'s my first day in social network\", likescount: 102 },\r\n        { id: 3, message: \"slava tebe Boje!\", likescount: 114 },\r\n        { id: 4, message: \"superrrrrrrrrrrrr\", likescount: 596 },\r\n        { id: 5, message: \"uraaaaaaaaaaaaa\", likescount: 1020 }\r\n\r\n    ],\r\n\r\n    profile: null,\r\n    status: \"\"\r\n};\r\nconst profileReducer = (state = startState, action) => {\r\n    switch (action.type) {\r\n        case onButtonClickEvent:\r\n            // let newPost = {\r\n            //     id: 6,\r\n            //     message: state.newPostText,\r\n            //     likescount: 0\r\n            // }\r\n            // state.posts.push(newPost);\r\n            // state.newPostText = \" \";\r\n            let newPost = action.newPostText;\r\n            // let stateCopy\r\n            return {\r\n                ...state,\r\n\r\n                posts: [...state.posts, { id: 7, message: newPost, likescount: 3 }]\r\n            };\r\n        // stateCopy.posts=[...state.posts];\r\n        // stateCopy.newPostText = \" \";\r\n        // stateCopy.posts.push({id: 7, message: newPost ,likescount:3});\r\n        // case updateNewPostText: {\r\n        //     // let stateCopy =\r\n        //     return {...state, newPostText: action.newPost};\r\n        //     // stateCopy.newPostText = action.newPost;\r\n        // return stateCopy;}\r\n\r\n        case setUserProfile:\r\n            return { ...state, profile: action.profile }\r\n        default:\r\n            return state;\r\n        case setStatus:\r\n            return { ...state, status: action.status };\r\n        case deletePost:\r\n            return { ...state, posts: state.posts.filter(p => p.id != action.postId) }\r\n\r\n    }\r\n};\r\nexport const deletePostActionCreator = (postId) => ({ type: deletePost, postId });\r\n\r\nexport const onButtonClickEventActionCreator = (newPostText) => ({ type: onButtonClickEvent, newPostText });\r\nexport const updateNewPostTextActionCreator = (text) => ({ type: updateNewPostText, newPost: text });\r\nexport const setUserProfileAC = (profile) => ({ type: setUserProfile, profile });\r\nexport const setStatusAC = (status) => ({ type: setStatus, status });\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n\r\n    let response = await UsersAPI.getProfile(userId)\r\n    /*  .then(response => { */\r\n    dispatch(setUserProfileAC(response.data));\r\n\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n\r\n    let response = await profileAPI.getStatus(userId)\r\n\r\n\r\n    dispatch(setStatusAC(response.data));\r\n\r\n\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) { dispatch(setStatusAC(status)) }\r\n\r\n\r\n};\r\n\r\nexport default profileReducer;","import React, {Suspense} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n/* let mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent; */\r\n    export const withSuspense = (Component) => {\r\n\r\n        return (props) =>(<Suspense fallback={<Preloader/>}>\r\n         <Component {...props}/>\r\n         </Suspense> )\r\n                \r\n                \r\n        \r\n        }\r\n    "],"sourceRoot":""}