{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPostsForm/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","avatar","src","name","Message","message","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","ProfileInfo","profile","descriptionBlock","photos","large","aboutMe","lookingForAJobDescription","lookingForAJob","poiskRabotyPhoto","fullName","contacts","facebook","youtube","vk","instagram","github","twitter","website","Preloader","Post","item","likescount","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","posts","reverse","map","p","key","postsBlock","dispatch","onButtonClick","newPostText","reset","MyPostsContainer","connect","state","profilePage","onButtonClickEventActionCreator","window","Profile","push","ProfileContainer","userId","this","match","params","authUserId","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.a4af096c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3SZvI\",\"dialogItems\":\"Dialogs_dialogItems__1NPjY\",\"active\":\"Dialogs_active__FIPNT\",\"messages\":\"Dialogs_messages__1QWa9\",\"message\":\"Dialogs_message__23Dch\",\"avatar\":\"Dialogs_avatar__3OSLs\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialog/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n\r\n            <NavLink to={path}>\r\n                <div>\r\n                    <img className={s.avatar} src={props.avatar}/>\r\n                </div>\r\n                <div>\r\n                    {props.name}\r\n                </div>\r\n            </NavLink>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    // let onButtonClick = () => {\r\n    //\r\n    //\r\n    //     let text = newPost.current.value;\r\n    //     props.onButtonClickEvent(text);\r\n    //\r\n    // }\r\n    //\r\n    // let onPostChange = () => {\r\n    //     let text = newPost.current.value;\r\n    //     props.updateNewPostText(text);\r\n    // }\r\n    return (\r\n        <div className={s.dialog}>\r\n\r\n\r\n\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3wrlI\",\"poiskRabotyPhoto\":\"ProfileInfo_poiskRabotyPhoto__28MWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__27Vvm\",\"posts\":\"MyPosts_posts__3klq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2x9zK\"};","import React, { useState, useEffect } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    //let stateWithSetState=useState(true);\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        \r\n        setStatus(props.status) }, [props.status])\r\n\r\n    /* let editMode=stateWithSetState[0];\r\n    let setEditMode=stateWithSetState[1]; */\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n\r\n    }\r\n\r\n    /* if(status!==props.status)\r\n            { setStatus({status:props.status})} */\r\n\r\n\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || \"no STATUS\"}</span>\r\n                </div>}\r\n\r\n            {editMode &&\r\n                <div>\r\n                    <input onBlur={deActivateEditMode} onChange={onStatusChange} autoFocus={true} value={status} />\r\n                </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport DialogItem from \"../../Dialogs/DialogItem/DialogItem\";\r\nimport Message from \"../../Dialogs/Message/Message\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport Profile from \"../Profile\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    //\r\n    // let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} avatar={d.avatar} id={d.id}/>);\r\n    //let contactsElements = props.profile.contacts.map(c => c.contacts);\r\n    // let newPostTextMessage = state.newPostTextMessage;\r\n\r\n    //let aboutMe = props.profile.aboutMe;\r\n\r\n    // let Contacts = props.profile.contacts.map( function(obj){return obj.value});\r\n    // for(i=0; i<ContactsMassive.length;i++){\r\n    //     let element=ContactMassive[i]\r\n    // }\r\n    // // if(props.profile.lookingForAJob===true){return ( \"i am looking a job\")}\r\n    //  let Contacts=[\"facebook\",  \"website\", \"vk\", \"twitter\", \"instagram\", \"youtube\", \"github\", \"mainLink\"];\r\n    //  let index;\r\n    //  for (index=0; index<Contacts.length, ++index;){ (Contacts[index])};\r\n    //  let state=props.profile.contacts;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div><img src={\"https://klike.net/uploads/posts/2019-01/1547365376_1.jpg\"}/></div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <div> <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/> </div>\r\n                {/*<textarea value={aboutMe} cols=\"30\" rows=\"10\"/>*/}\r\n                <div> {profile.aboutMe} </div>\r\n                <div>{\"Poisk raboty:\" + profile.lookingForAJobDescription}</div>\r\n                <div>{profile.lookingForAJob === true ?<img className={s.poiskRabotyPhoto} src={\"https://ruherald.com/wp-content/uploads/2018/06/jobs5.jpg\"}/> : null}</div>\r\n                {/*<>{props.profile.contacts}</>*/}\r\n\r\n\r\n                <div>\r\n                    {profile.fullName}\r\n                </div>\r\n                <div>\r\n                    <div>{profile.contacts.facebook}</div>\r\n                    <div>{profile.contacts.youtube}</div>\r\n                    <div>{profile.contacts.vk}</div>\r\n                    <div>{profile.contacts.instagram}</div>\r\n                    <div>{profile.contacts.github}</div>\r\n                    <div>{profile.contacts.twitter}</div>\r\n                    <div>{profile.contacts.website}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n\r\n            <img src={\"https://cdn3.iconfinder.com/data/icons/many-peoples-vol-2/512/16-512.png\"}/>\r\n            {props.message}\r\n\r\n\r\n            <div>\r\n                <span>\r\n                    <img src={\"https://img.icons8.com/plasticine/2x/like--v1.png\"}/>\r\n                    {props.likescount}\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { maxLengthCreator,  required} from \"../../../validators/validators\";\r\nimport { Textarea } from \"../../common/formControls/formControls\";\r\n\r\nconst maxLength10=maxLengthCreator(10);\r\nconst MyPostsForm = (props) => {\r\n\r\n    //let newPost = React.createRef();\r\n\r\n    // let onButton = () => {\r\n    //     props.onButtonClick();\r\n        // eslint-disable-next-line no-undef\r\n        // props.dispatch(onButtonClickEventActionCreator());    }\r\n    //let onPostChange = (e) => {\r\n    //     // let text = newPost.current.value;\r\n    //     let text = e.target.value;\r\n    //     props.updateNewPostText(text);\r\n    //     // let action=updateNewPostTextActionCreator(text);\r\n    //     // props.dispatch(action);\r\n    // }\r\n    // let newPostText = props.newPostText;\r\n    \r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field   name={\"newPostText\"} component={Textarea} placeholder={\"enter message\"}\r\n                         validate={[required, maxLength10]}  />\r\n            </div>\r\n\r\n            <div>\r\n                <button >Press</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n export const MyPostsReduxForm=reduxForm({\r\n    // a unique name for the form\r\n    form: 'MyPostsForm'\r\n})(MyPostsForm);\r\n\r\n\r\n//  const MyPostsInForm = (props) => {\r\n//     return (\r\n//         <div>\r\n//             <MyPostsReduxForm onSubmit={props.onSubmit} />\r\n//         </div>\r\n//     )\r\n// }\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         posts: state.profilePage.posts,\r\n//         newPostText: state.profilePage.newPostText\r\n//     }\r\n// }\r\n//\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         onButtonClick: () => {\r\n//             dispatch(onButtonClickEventActionCreator());\r\n//         },\r\n//         updateNewPostText: (text) => {\r\n//             dispatch(updateNewPostTextActionCreator(text))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { MyPostsReduxForm } from \"../MyPostsForm/MyPostsForm\";\r\nimport { reset } from 'redux-form'\r\nimport { render } from \"@testing-library/react\";\r\n\r\n//window.props=[];\r\nconst MyPosts=React.memo(props=>  {\r\n    /* window.props.push(props);\r\n    console.log(\"render\");\r\n    console.log(props); */\r\n\r\n\r\n    //let newPost = React.createRef();\r\n    // let onButton = () => {\r\n    //     props.onButtonClick();\r\n    //     // eslint-disable-next-line no-undef\r\n    //     // props.dispatch(onButtonClickEventActionCreator());\r\n    //\r\n    // }\r\n    //\r\n    // let onPostChange = (e) => {\r\n    //     // let text = newPost.current.value;\r\n    //     let text = e.target.value;\r\n    //     props.updateNewPostText(text);\r\n    //     // let action=updateNewPostTextActionCreator(text);\r\n    //     // props.dispatch(action);\r\n    // }\r\n    //\r\n    // let newPostText = props.newPostText;\r\n    /* componentDidUpdate() {\r\n        console.log(\"componentDidUpdate\")\r\n    } */\r\n  /*   componentDidMount (){\r\n        setTimeout(()=>{\r\n            this.setState({a:12})\r\n        },3000)\r\n\r\n    } */\r\n   /*  shouldComponentUpdate(nextProps,nextState){\r\n      return  nextProps !=this.props || nextState!=this.state \r\n\r\n    }  */\r\n\r\n    \r\n        console.log(\"render\");\r\n        console.log(props);\r\n\r\n        let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} key={p.id} likescount={p.likescount} />);\r\n        let addNewPostText = (value, dispatch) => {\r\n            props.onButtonClick(value.newPostText);\r\n            dispatch(reset('MyPostsForm'))\r\n        }\r\n\r\n        \r\n        return (\r\n\r\n            <div className={s.postsBlock}>\r\n                <div><h3> My post </h3>\r\n                    <div>\r\n                        <MyPostsReduxForm onSubmit={addNewPostText} {...props} />\r\n                    </div>\r\n                    {/*<div>*/}\r\n                    {/*    <textarea onChange={onPostChange} placeholder={\"enter svoi posty\"} value={newPostText}/>*/}\r\n                    {/*</div>*/}\r\n                    {/*<div>*/}\r\n                    {/*    <button onClick={onButton}>Add post</button>*/}\r\n                    {/*</div>*/}\r\n\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n)\r\n// function MyPostsForm (props) {\r\n//\r\n//     //let newPost = React.createRef();\r\n//\r\n//     // let onButton = () => {\r\n//     //     props.onButtonClick();\r\n//     // eslint-disable-next-line no-undef\r\n//     // props.dispatch(onButtonClickEventActionCreator());    }\r\n//     //let onPostChange = (e) => {\r\n//     //     // let text = newPost.current.value;\r\n//     //     let text = e.target.value;\r\n//     //     props.updateNewPostText(text);\r\n//     //     // let action=updateNewPostTextActionCreator(text);\r\n//     //     // props.dispatch(action);\r\n//     // }\r\n//     // let newPostText = props.newPostText;\r\n//     return (\r\n//\r\n//         <form onSubmit={props.handleSubmit} >\r\n//             <div>\r\n//                 < Field   name={\"newPostText\"} component={\"textarea\"}\r\n//                           placeholder={\"Enter your post\"} validate={[required, maxLength]} typeField={textareaForm}/>\r\n//             </div>\r\n//\r\n//             <div>\r\n//                 <button >Press</button>\r\n//             </div>\r\n//         </form>\r\n//     )\r\n// }\r\n// const MyPostsReduxForm=reduxForm({\r\n//     // a unique name for the form\r\n//     form: 'MyPostsForm'\r\n// })(MyPostsForm);\r\nexport default MyPosts;","import {onButtonClickEventActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onButtonClick: (newPostText) => {\r\n            dispatch(onButtonClickEventActionCreator(newPostText));\r\n        },\r\n        // updateNewPostText: (text) => {\r\n        //     dispatch(updateNewPostTextActionCreator(text))\r\n        // }\r\n    }\r\n}\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n//\r\n//     return (\r\n//         <ContextStore.Consumer>{(store)=> {\r\n//             let state = store.getState();\r\n//             let onButtonClick = () => {\r\n//                 // eslint-disable-next-line no-undef\r\n//                 store.dispatch(onButtonClickEventActionCreator());\r\n//             }\r\n//             let onPostChange = (text) => {\r\n//                 let action = updateNewPostTextActionCreator(text);\r\n//                 store.dispatch(action);\r\n//             }\r\n//             return(<MyPosts updateNewPostText={(onPostChange)} onButtonClick={(onButtonClick)} posts={state.profilePage.posts}\r\n//                      newPostText={state.profilePage.newPostText}/>)}}\r\n//\r\n//         </ContextStore.Consumer>\r\n//     )}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps )(MyPosts);\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nwindow.props = []\r\nconst Profile = (props) => {\r\n    window.props.push(props)\r\n\r\n    console.log(\"profile\");\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authUserId\r\n        } if(!userId){this.props.history.push(\"/login\")}\r\n        //axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+userId)\r\n        //\r\n        this.props.getUserProfile(userId);\r\n        // setTimeout(()=>{\r\n        this.props.getStatus(userId);\r\n        // }, 1000)\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"component render\")\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent=withAuthRedirect(ProfileContainer);\r\n\r\n// let mapStateToPropsForRedirect=(state)=>({\r\n//     isAuth:state.auth.isAuth\r\n// });\r\n// AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n\r\n// (props)=>{\r\n// if(!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n//\r\n// return <ProfileContainer {...props}/>}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n//console.log(\"mapStateToProps render\");\r\n   return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId:state.auth.userId,\r\n    isAuth:state.auth.isAuth\r\n\r\n})};\r\n// let withUrlDataContainerComponent=withRouter(AuthRedirectComponent);\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus\r\n}), withRouter)(ProfileContainer);\r\n;"],"sourceRoot":""}